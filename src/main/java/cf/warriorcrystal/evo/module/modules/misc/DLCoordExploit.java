package cf.warriorcrystal.evo.module.modules.misc;

import java.util.ArrayList;

import cf.warriorcrystal.evo.Evo;
import cf.warriorcrystal.evo.command.Command;
import cf.warriorcrystal.evo.event.events.PacketEvent;
import cf.warriorcrystal.evo.event.events.RenderEvent;
import cf.warriorcrystal.evo.module.Module;
import de.Hero.settings.Setting;
import me.zero.alpine.listener.EventHandler;
import me.zero.alpine.listener.Listener;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.CPacketPlayerDigging;
import net.minecraft.util.EnumFacing;
import net.minecraft.util.math.BlockPos;

public class DLCoordExploit extends Module {
    public DLCoordExploit() {
        super("NoComScan", Category.MISC);
    }

    public BlockPos pos1 = new BlockPos(0, 0, 0);
    public BlockPos pos2 = new BlockPos(0, 0, 0);
    int x;
    int z;

    Setting x1;
    Setting z1;
    Setting x2;
    Setting z2;
    Setting step;
    Setting amountPerTick;
    Setting debug;

    public void setup(){
        Evo.getInstance().settingsManager.rSetting(x1 = new Setting("x1", this, 0, -30000000, 30000000, true));
        Evo.getInstance().settingsManager.rSetting(z1 = new Setting("z1", this, 0, -30000000, 30000000, true));
        Evo.getInstance().settingsManager.rSetting(x2 = new Setting("x2", this, 0, -30000000, 30000000, true));
        Evo.getInstance().settingsManager.rSetting(z2 = new Setting("z2", this, 0, -30000000, 30000000, true));
        Evo.getInstance().settingsManager.rSetting(step = new Setting("Step", this, 144, 1, 10000, true));
        Evo.getInstance().settingsManager.rSetting(amountPerTick = new Setting("PPT", this, 4, 1, 15, true));
        Evo.getInstance().settingsManager.rSetting(debug = new Setting("Debug", this, false));
    }

    public void onUpdate() {
        if (mc.player.connection == null || mc.world == null) {
            return;
        }
        for (int i = 0; i < this.amountPerTick.getValInt(); ++i) {
            if (this.debug.getValBoolean()) {
                Command.sendClientMessage(this.x + ", " + this.z);
            }
            mc.player.connection.sendPacket((Packet)new CPacketPlayerDigging(CPacketPlayerDigging.Action.ABORT_DESTROY_BLOCK, new BlockPos(this.x, 0, this.z), EnumFacing.UP));
            if (this.x < pos2.getX()) {
                this.x += this.step.getValInt();
            }
            if (this.x > pos2.getX()) {
                this.x = pos1.getX();
                this.z += this.step.getValInt();
            }
            if (this.z <= pos2.getZ()) continue;
            Command.sendClientMessage("Finished.");
            this.toggle();
            return;
        }
    }

    public void onEnable() {
        Evo.EVENT_BUS.subscribe(this);
        pos1 = new BlockPos(this.x1.getValInt(), 0, this.z1.getValInt());
        pos2 = new BlockPos(this.x2.getValInt(), 0, this.z2.getValInt());
        x = pos1.getX();
        z = pos1.getZ();
    }
    
    public void onDisable() {
        Evo.EVENT_BUS.unsubscribe(this);
        Command.sendClientMessage("Stopped at " + this.x + ", " + this.z);
    }

    public String getHudInfo() {
        return this.x + ", " + this.z;
    }

}
